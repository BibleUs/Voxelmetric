public static class Data {

    public static BlockPos[] chunkLoadOrder = {   new BlockPos( 0, 0,  0), new BlockPos(-1, 0,  0), new BlockPos( 0, 0, -1), new BlockPos( 0, 0,  1), new BlockPos( 1, 0,  0),
    new BlockPos(-1, 0, -1), new BlockPos(-1, 0,  1), new BlockPos( 1, 0, -1), new BlockPos( 1, 0,  1), new BlockPos(-2, 0,  0),
    new BlockPos( 0, 0, -2), new BlockPos( 0, 0,  2), new BlockPos( 2, 0,  0), new BlockPos(-2, 0, -1), new BlockPos(-2, 0,  1),
    new BlockPos(-1, 0, -2), new BlockPos(-1, 0,  2), new BlockPos( 1, 0, -2), new BlockPos( 1, 0,  2), new BlockPos( 2, 0, -1),
    new BlockPos( 2, 0,  1), new BlockPos(-2, 0, -2), new BlockPos(-2, 0,  2), new BlockPos( 2, 0, -2), new BlockPos( 2, 0,  2),
    new BlockPos(-3, 0,  0), new BlockPos( 0, 0, -3), new BlockPos( 0, 0,  3), new BlockPos( 3, 0,  0), new BlockPos(-3, 0, -1),
    new BlockPos(-3, 0,  1), new BlockPos(-1, 0, -3), new BlockPos(-1, 0,  3), new BlockPos( 1, 0, -3), new BlockPos( 1, 0,  3),
    new BlockPos( 3, 0, -1), new BlockPos( 3, 0,  1), new BlockPos(-3, 0, -2), new BlockPos(-3, 0,  2), new BlockPos(-2, 0, -3),
    new BlockPos(-2, 0,  3), new BlockPos( 2, 0, -3), new BlockPos( 2, 0,  3), new BlockPos( 3, 0, -2), new BlockPos( 3, 0,  2),
    new BlockPos(-4, 0,  0), new BlockPos( 0, 0, -4), new BlockPos( 0, 0,  4), new BlockPos( 4, 0,  0), new BlockPos(-4, 0, -1),
    new BlockPos(-4, 0,  1), new BlockPos(-1, 0, -4), new BlockPos(-1, 0,  4), new BlockPos( 1, 0, -4), new BlockPos( 1, 0,  4),
    new BlockPos( 4, 0, -1), new BlockPos( 4, 0,  1), new BlockPos(-3, 0, -3), new BlockPos(-3, 0,  3), new BlockPos( 3, 0, -3),
    new BlockPos( 3, 0,  3), new BlockPos(-4, 0, -2), new BlockPos(-4, 0,  2), new BlockPos(-2, 0, -4), new BlockPos(-2, 0,  4),
    new BlockPos( 2, 0, -4), new BlockPos( 2, 0,  4), new BlockPos( 4, 0, -2), new BlockPos( 4, 0,  2), new BlockPos(-5, 0,  0),
    new BlockPos(-4, 0, -3), new BlockPos(-4, 0,  3), new BlockPos(-3, 0, -4), new BlockPos(-3, 0,  4), new BlockPos( 0, 0, -5),
    new BlockPos( 0, 0,  5), new BlockPos( 3, 0, -4), new BlockPos( 3, 0,  4), new BlockPos( 4, 0, -3), new BlockPos( 4, 0,  3),
    new BlockPos( 5, 0,  0), new BlockPos(-5, 0, -1), new BlockPos(-5, 0,  1), new BlockPos(-1, 0, -5), new BlockPos(-1, 0,  5),
    new BlockPos( 1, 0, -5), new BlockPos( 1, 0,  5), new BlockPos( 5, 0, -1), new BlockPos( 5, 0,  1), new BlockPos(-5, 0, -2),
    new BlockPos(-5, 0,  2), new BlockPos(-2, 0, -5), new BlockPos(-2, 0,  5), new BlockPos( 2, 0, -5), new BlockPos( 2, 0,  5),
    new BlockPos( 5, 0, -2), new BlockPos( 5, 0,  2), new BlockPos(-4, 0, -4), new BlockPos(-4, 0,  4), new BlockPos( 4, 0, -4),
    new BlockPos( 4, 0,  4), new BlockPos(-5, 0, -3), new BlockPos(-5, 0,  3), new BlockPos(-3, 0, -5), new BlockPos(-3, 0,  5),
    new BlockPos( 3, 0, -5), new BlockPos( 3, 0,  5), new BlockPos( 5, 0, -3), new BlockPos( 5, 0,  3), new BlockPos(-6, 0,  0),
    new BlockPos( 0, 0, -6), new BlockPos( 0, 0,  6), new BlockPos( 6, 0,  0), new BlockPos(-6, 0, -1), new BlockPos(-6, 0,  1),
    new BlockPos(-1, 0, -6), new BlockPos(-1, 0,  6), new BlockPos( 1, 0, -6), new BlockPos( 1, 0,  6), new BlockPos( 6, 0, -1),
    new BlockPos( 6, 0,  1), new BlockPos(-6, 0, -2), new BlockPos(-6, 0,  2), new BlockPos(-2, 0, -6), new BlockPos(-2, 0,  6),
    new BlockPos( 2, 0, -6), new BlockPos( 2, 0,  6), new BlockPos( 6, 0, -2), new BlockPos( 6, 0,  2), new BlockPos(-5, 0, -4),
    new BlockPos(-5, 0,  4), new BlockPos(-4, 0, -5), new BlockPos(-4, 0,  5), new BlockPos( 4, 0, -5), new BlockPos( 4, 0,  5),
    new BlockPos( 5, 0, -4), new BlockPos( 5, 0,  4), new BlockPos(-6, 0, -3), new BlockPos(-6, 0,  3), new BlockPos(-3, 0, -6),
    new BlockPos(-3, 0,  6), new BlockPos( 3, 0, -6), new BlockPos( 3, 0,  6), new BlockPos( 6, 0, -3), new BlockPos( 6, 0,  3),
    new BlockPos(-7, 0,  0), new BlockPos( 0, 0, -7), new BlockPos( 0, 0,  7), new BlockPos( 7, 0,  0), new BlockPos(-7, 0, -1),
    new BlockPos(-7, 0,  1), new BlockPos(-5, 0, -5), new BlockPos(-5, 0,  5), new BlockPos(-1, 0, -7), new BlockPos(-1, 0,  7),
    new BlockPos( 1, 0, -7), new BlockPos( 1, 0,  7), new BlockPos( 5, 0, -5), new BlockPos( 5, 0,  5), new BlockPos( 7, 0, -1),
    new BlockPos( 7, 0,  1), new BlockPos(-6, 0, -4), new BlockPos(-6, 0,  4), new BlockPos(-4, 0, -6), new BlockPos(-4, 0,  6),
    new BlockPos( 4, 0, -6), new BlockPos( 4, 0,  6), new BlockPos( 6, 0, -4), new BlockPos( 6, 0,  4), new BlockPos(-7, 0, -2),
    new BlockPos(-7, 0,  2), new BlockPos(-2, 0, -7), new BlockPos(-2, 0,  7), new BlockPos( 2, 0, -7), new BlockPos( 2, 0,  7),
    new BlockPos( 7, 0, -2), new BlockPos( 7, 0,  2), new BlockPos(-7, 0, -3), new BlockPos(-7, 0,  3), new BlockPos(-3, 0, -7),
    new BlockPos(-3, 0,  7), new BlockPos( 3, 0, -7), new BlockPos( 3, 0,  7), new BlockPos( 7, 0, -3), new BlockPos( 7, 0,  3),
    new BlockPos(-6, 0, -5), new BlockPos(-6, 0,  5), new BlockPos(-5, 0, -6), new BlockPos(-5, 0,  6), new BlockPos( 5, 0, -6),
    new BlockPos( 5, 0,  6), new BlockPos( 6, 0, -5), new BlockPos( 6, 0,  5) };
}
